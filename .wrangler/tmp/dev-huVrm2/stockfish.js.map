{
  "version": 3,
  "sources": ["../bundle-ml4F2J/checked-fetch.js", "../bundle-ml4F2J/strip-cf-connecting-ip-header.js", "../../../functions/api/stockfish.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-ml4F2J/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-ml4F2J/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/wables/lawb2/.wrangler/tmp/dev-huVrm2",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "// Cloudflare Worker for Stockfish Chess API\n// This replaces the Node.js stockfish-api.cjs\n\n// Simple chess engine implementation for Cloudflare Workers\nclass SimpleChessEngine {\n  constructor() {\n    this.board = this.initializeBoard();\n    this.moveHistory = [];\n  }\n\n  initializeBoard() {\n    // Initialize empty 8x8 board\n    const board = Array(8).fill(null).map(() => Array(8).fill(null));\n    \n    // Set up initial piece positions (standard chess setup)\n    const initialSetup = {\n      0: ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'], // Black pieces\n      1: ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'], // Black pawns\n      6: ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'], // White pawns\n      7: ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']  // White pieces\n    };\n    \n    for (let row = 0; row < 8; row++) {\n      for (let col = 0; col < 8; col++) {\n        if (initialSetup[row]) {\n          board[row][col] = initialSetup[row][col];\n        }\n      }\n    }\n    \n    return board;\n  }\n\n  setPositionFromFEN(fen) {\n    const parts = fen.split(' ');\n    const position = parts[0];\n    const rows = position.split('/');\n    \n    // Clear board\n    this.board = Array(8).fill(null).map(() => Array(8).fill(null));\n    \n    for (let row = 0; row < 8; row++) {\n      let col = 0;\n      for (let char of rows[row]) {\n        if (char >= '1' && char <= '8') {\n          col += parseInt(char);\n        } else {\n          this.board[row][col] = char;\n          col++;\n        }\n      }\n    }\n    \n    // Parse the side to move from FEN\n    if (parts.length > 1) {\n      this.currentPlayer = parts[1] === 'w' ? 'white' : 'black';\n    } else {\n      this.currentPlayer = 'white'; // Default\n    }\n  }\n\n  getLegalMoves() {\n    const moves = [];\n    \n    for (let row = 0; row < 8; row++) {\n      for (let col = 0; col < 8; col++) {\n        const piece = this.board[row][col];\n        if (piece && this.isPieceOfPlayer(piece, this.currentPlayer)) {\n          const pieceMoves = this.getMovesForPiece(row, col, piece);\n          moves.push(...pieceMoves);\n        }\n      }\n    }\n    \n    return moves;\n  }\n\n  getCurrentPlayer() {\n    return this.currentPlayer;\n  }\n\n  isPieceOfPlayer(piece, player) {\n    const isWhite = piece === piece.toUpperCase();\n    return (player === 'white' && isWhite) || (player === 'black' && !isWhite);\n  }\n\n  getMovesForPiece(row, col, piece) {\n    const moves = [];\n    const isWhite = piece === piece.toUpperCase();\n    const pieceType = piece.toLowerCase();\n    \n    switch (pieceType) {\n      case 'p': // Pawn\n        moves.push(...this.getPawnMoves(row, col, isWhite));\n        break;\n      case 'r': // Rook\n        moves.push(...this.getRookMoves(row, col));\n        break;\n      case 'n': // Knight\n        moves.push(...this.getKnightMoves(row, col));\n        break;\n      case 'b': // Bishop\n        moves.push(...this.getBishopMoves(row, col));\n        break;\n      case 'q': // Queen\n        moves.push(...this.getQueenMoves(row, col));\n        break;\n      case 'k': // King\n        moves.push(...this.getKingMoves(row, col));\n        break;\n    }\n    \n    return moves;\n  }\n\n  getPawnMoves(row, col, isWhite) {\n    const moves = [];\n    const direction = isWhite ? -1 : 1;\n    const startRow = isWhite ? 6 : 1;\n    \n    // Forward move\n    if (this.isValidPosition(row + direction, col) && !this.board[row + direction][col]) {\n      moves.push({ from: [row, col], to: [row + direction, col] });\n      \n      // Double move from starting position\n      if (row === startRow && !this.board[row + 2 * direction][col]) {\n        moves.push({ from: [row, col], to: [row + 2 * direction, col] });\n      }\n    }\n    \n    // Captures\n    for (let dcol of [-1, 1]) {\n      const newRow = row + direction;\n      const newCol = col + dcol;\n      if (this.isValidPosition(newRow, newCol) && \n          this.board[newRow][newCol] && \n          this.isPieceOfPlayer(this.board[newRow][newCol], isWhite ? 'black' : 'white')) {\n        moves.push({ from: [row, col], to: [newRow, newCol] });\n      }\n    }\n    \n    return moves;\n  }\n\n  getRookMoves(row, col) {\n    return this.getSlidingMoves(row, col, [[-1, 0], [1, 0], [0, -1], [0, 1]]);\n  }\n\n  getBishopMoves(row, col) {\n    return this.getSlidingMoves(row, col, [[-1, -1], [-1, 1], [1, -1], [1, 1]]);\n  }\n\n  getQueenMoves(row, col) {\n    return this.getSlidingMoves(row, col, [\n      [-1, 0], [1, 0], [0, -1], [0, 1],\n      [-1, -1], [-1, 1], [1, -1], [1, 1]\n    ]);\n  }\n\n  getKnightMoves(row, col) {\n    const moves = [];\n    const knightMoves = [\n      [-2, -1], [-2, 1], [-1, -2], [-1, 2],\n      [1, -2], [1, 2], [2, -1], [2, 1]\n    ];\n    \n    for (let [drow, dcol] of knightMoves) {\n      const newRow = row + drow;\n      const newCol = col + dcol;\n      if (this.isValidPosition(newRow, newCol) && \n          (!this.board[newRow][newCol] || \n           !this.isPieceOfPlayer(this.board[newRow][newCol], this.getCurrentPlayer()))) {\n        moves.push({ from: [row, col], to: [newRow, newCol] });\n      }\n    }\n    \n    return moves;\n  }\n\n  getKingMoves(row, col) {\n    const moves = [];\n    const kingMoves = [\n      [-1, -1], [-1, 0], [-1, 1],\n      [0, -1], [0, 1],\n      [1, -1], [1, 0], [1, 1]\n    ];\n    \n    for (let [drow, dcol] of kingMoves) {\n      const newRow = row + drow;\n      const newCol = col + dcol;\n      if (this.isValidPosition(newRow, newCol) && \n          (!this.board[newRow][newCol] || \n           !this.isPieceOfPlayer(this.board[newRow][newCol], this.getCurrentPlayer()))) {\n        moves.push({ from: [row, col], to: [newRow, newCol] });\n      }\n    }\n    \n    return moves;\n  }\n\n  getSlidingMoves(row, col, directions) {\n    const moves = [];\n    const currentPlayer = this.getCurrentPlayer();\n    \n    for (let [drow, dcol] of directions) {\n      let newRow = row + drow;\n      let newCol = col + dcol;\n      \n      while (this.isValidPosition(newRow, newCol)) {\n        const targetPiece = this.board[newRow][newCol];\n        \n        if (!targetPiece) {\n          moves.push({ from: [row, col], to: [newRow, newCol] });\n        } else {\n          if (!this.isPieceOfPlayer(targetPiece, currentPlayer)) {\n            moves.push({ from: [row, col], to: [newRow, newCol] });\n          }\n          break;\n        }\n        \n        newRow += drow;\n        newCol += dcol;\n      }\n    }\n    \n    return moves;\n  }\n\n  isValidPosition(row, col) {\n    return row >= 0 && row < 8 && col >= 0 && col < 8;\n  }\n\n  findBestMove() {\n    const legalMoves = this.getLegalMoves();\n    \n    if (legalMoves.length === 0) {\n      return null;\n    }\n    \n    // Simple evaluation: prefer captures and center control\n    let bestMove = legalMoves[0];\n    let bestScore = -Infinity;\n    \n    for (let move of legalMoves) {\n      const score = this.evaluateMove(move);\n      if (score > bestScore) {\n        bestScore = score;\n        bestMove = move;\n      }\n    }\n    \n    return this.moveToNotation(bestMove);\n  }\n\n  evaluateMove(move) {\n    let score = 0;\n    const targetPiece = this.board[move.to[0]][move.to[1]];\n    \n    // Prefer captures\n    if (targetPiece) {\n      score += this.getPieceValue(targetPiece);\n    }\n    \n    // Prefer center control\n    const centerDistance = Math.abs(move.to[0] - 3.5) + Math.abs(move.to[1] - 3.5);\n    score += (7 - centerDistance) * 0.1;\n    \n    // Add some randomness for variety\n    score += Math.random() * 0.5;\n    \n    return score;\n  }\n\n  getPieceValue(piece) {\n    const values = { 'p': 1, 'n': 3, 'b': 3, 'r': 5, 'q': 9, 'k': 0 };\n    return values[piece.toLowerCase()] || 0;\n  }\n\n  moveToNotation(move) {\n    const files = 'abcdefgh';\n    const ranks = '87654321';\n    \n    const fromFile = files[move.from[1]];\n    const fromRank = ranks[move.from[0]];\n    const toFile = files[move.to[1]];\n    const toRank = ranks[move.to[0]];\n    \n    return fromFile + fromRank + toFile + toRank;\n  }\n}\n\nexport default {\n  async fetch(request) {\n    // Handle CORS\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        status: 200,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type',\n        },\n      });\n    }\n\n    // Only allow POST requests\n    if (request.method !== 'POST') {\n      return new Response('Method not allowed', { status: 405 });\n    }\n\n    try {\n      const { fen, movetime = 1200 } = await request.json();\n\n      if (!fen) {\n        return new Response(JSON.stringify({ error: 'FEN position required' }), {\n          status: 400,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n      }\n\n      // Initialize chess engine\n      const engine = new SimpleChessEngine();\n      engine.setPositionFromFEN(fen);\n      \n      // Find best move\n      const bestmove = engine.findBestMove();\n      \n      if (!bestmove) {\n        return new Response(JSON.stringify({ error: 'No legal moves found' }), {\n          status: 400,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n      }\n      \n      const response = {\n        bestmove: bestmove,\n        fen: fen,\n        movetime: movetime\n      };\n\n      return new Response(JSON.stringify(response), {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n      });\n\n    } catch (error) {\n      return new Response(JSON.stringify({ error: error.message }), {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n      });\n    }\n  },\n}; ", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/wables/lawb2/functions/api/stockfish.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/wables/lawb2/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/wables/lawb2/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/wables/lawb2/functions/api/stockfish.js\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/wables/lawb2/.wrangler/tmp/bundle-ml4F2J/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/wables/lawb2/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/wables/lawb2/.wrangler/tmp/bundle-ml4F2J/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/wables/lawb2/.wrangler/tmp/bundle-ml4F2J/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
